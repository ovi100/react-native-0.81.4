import React, {useEffect, useRef} from 'react';
import Svg, {Path} from 'react-native-svg';
import Animated, {
  useSharedValue,
  useAnimatedProps,
  withTiming,
  withRepeat,
  Easing,
} from 'react-native-reanimated';

const AnimatedPath = Animated.createAnimatedComponent(Path);

const TextAnimation = () => {
  const strokeLength = useSharedValue(0);
  const pathRef = useRef(null);

  useEffect(() => {
    // Start animation after calculating path length
    if (pathRef.current) {
      const totalLength = pathRef.current.getTotalLength();
      strokeLength.value = withRepeat(
        withTiming(totalLength, {
          duration: 3000,
          easing: Easing.inOut(Easing.ease),
        }),
        -1,
        true,
      );
    }
  }, [strokeLength]);

  // Animated props for the path
  const animatedProps = useAnimatedProps(() => ({
    strokeDashoffset: -strokeLength.value,
  }));

  const pathData =
    'M0 33.76L4.47 33.37Q4.79 36.06 5.94 37.78Q7.10 39.50 9.55 40.56Q11.99 41.63 15.04 41.63Q17.75 41.63 19.82 40.82Q21.90 40.01 22.91 38.61Q23.93 37.21 23.93 35.55Q23.93 33.86 22.95 32.60Q21.97 31.35 19.73 30.49Q18.29 29.93 13.35 28.75Q8.42 27.56 6.45 26.51Q3.88 25.17 2.62 23.18Q1.37 21.19 1.37 18.73Q1.37 16.02 2.91 13.66Q4.44 11.30 7.40 10.08Q10.35 8.86 13.96 8.86Q17.94 8.86 20.98 10.14Q24.02 11.43 25.66 13.92Q27.29 16.41 27.42 19.56L22.88 19.90Q22.51 16.50 20.40 14.77Q18.29 13.04 14.16 13.04Q9.86 13.04 7.90 14.61Q5.93 16.19 5.93 18.41Q5.93 20.34 7.32 21.58Q8.69 22.83 14.47 24.13Q20.24 25.44 22.39 26.42Q25.51 27.86 27.00 30.07Q28.49 32.28 28.49 35.16Q28.49 38.01 26.86 40.54Q25.22 43.07 22.16 44.47Q19.09 45.87 15.26 45.87Q10.40 45.87 7.12 44.46Q3.83 43.04 1.97 40.20Q0.10 37.35 0 33.76ZM35.11 45.26L35.11 9.47L39.84 9.47L39.84 24.17L58.45 24.17L58.45 9.47L63.18 9.47L63.18 45.26L58.45 45.26L58.45 28.39L39.84 28.39L39.84 45.26L35.11 45.26ZM77.32 45.26L67.82 9.47L72.68 9.47L78.13 32.93Q79.00 36.62 79.64 40.26Q81.01 34.52 81.25 33.64L88.06 9.47L93.77 9.47L98.90 27.59Q100.83 34.33 101.68 40.26Q102.37 36.87 103.47 32.47L109.08 9.47L113.84 9.47L104.03 45.26L99.46 45.26L91.92 17.99Q90.97 14.58 90.80 13.79Q90.23 16.26 89.75 17.99L82.15 45.26L77.32 45.26ZM112.48 45.26L126.22 9.47L131.32 9.47L145.97 45.26L140.58 45.26L136.40 34.42L121.44 34.42L117.50 45.26L112.48 45.26M122.80 30.57L134.94 30.57L131.20 20.65Q129.49 16.14 128.66 13.23Q127.98 16.67 126.73 20.07L122.80 30.57ZM149.76 45.26L149.76 9.47L163.26 9.47Q166.82 9.47 168.70 9.81Q171.34 10.25 173.12 11.49Q174.90 12.72 175.99 14.94Q177.08 17.16 177.08 19.82Q177.08 24.39 174.17 27.55Q171.26 30.71 163.67 30.71L154.49 30.71L154.49 45.26L149.76 45.26M154.49 26.49L163.75 26.49Q168.33 26.49 170.26 24.78Q172.19 23.07 172.19 19.97Q172.19 17.72 171.06 16.13Q169.92 14.53 168.07 14.01Q166.87 13.70 163.65 13.70L154.49 13.70L154.49 26.49ZM183.06 45.26L183.06 9.47L187.92 9.47L206.71 37.57L206.71 9.47L211.25 9.47L211.25 45.26L206.40 45.26L187.60 17.14L187.60 45.26L183.06 45.26ZM217.77 27.83Q217.77 18.92 222.56 13.88Q227.34 8.84 234.91 8.84Q239.87 8.84 243.85 11.21Q247.83 13.57 249.91 17.81Q252.00 22.05 252.00 27.42Q252.00 32.86 249.80 37.16Q247.61 41.46 243.58 43.66Q239.55 45.87 234.89 45.87Q229.83 45.87 225.85 43.43Q221.88 40.99 219.82 36.77Q217.77 32.54 217.77 27.83M222.66 27.91Q222.66 34.38 226.14 38.10Q229.61 41.82 234.86 41.82Q240.21 41.82 243.66 38.06Q247.12 34.30 247.12 27.39Q247.12 23.02 245.64 19.76Q244.17 16.50 241.32 14.71Q238.48 12.92 234.94 12.92Q229.91 12.92 226.28 16.37Q222.66 19.82 222.66 27.91Z';

  return (
    <Svg className="w-60 h-24 mx-auto" viewBox="0 0 300 100">
      <AnimatedPath
        ref={pathRef}
        d={pathData}
        stroke="black"
        strokeWidth={2}
        fill="none"
        strokeDasharray="2000"
        animatedProps={animatedProps}
      />
    </Svg>
  );
};

export default TextAnimation;
